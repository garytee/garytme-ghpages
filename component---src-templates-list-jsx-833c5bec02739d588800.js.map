{"version":3,"sources":["webpack:///./src/components/List/index.jsx","webpack:///./src/templates/List.jsx","webpack:///./node_modules/core-js/modules/es.array.index-of.js"],"names":["List","data","location","page","getPage","allPosts","getPosts","postCount","length","posts","slice","CONTENT_PER_PAGE","PostsWrapper","Helmet","PREFIX","name","content","map","node","frontmatter","images","tags","path","otherProps","Card","key","Pagination","propTypes","PropTypes","shape","isRequired","ListTemplate","props","$","$indexOf","indexOf","arrayMethodIsStrict","arrayMethodUsesToLength","nativeIndexOf","NEGATIVE_ZERO","STRICT_METHOD","USES_TO_LENGTH","ACCESSORS","1","target","proto","forced","searchElement","apply","this","arguments","undefined"],"mappings":"41BAUA,IAAMA,EAAO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACdC,EAAOC,YAAQF,GACfG,EAAWC,YAASL,GACpBM,EAAYF,EAASG,OACrBC,EAAQJ,EAASK,OAAOP,EAAO,GAAKQ,mBAAkBR,EAAOQ,oBAEnE,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yCACMC,SADN,UAGA,0BAAMC,KAAK,WAAWC,QAAO,UAAKF,SAAL,YAE9BL,EAAMQ,KAAI,oBAAGC,KAAQC,YAAeC,EAA1B,EAA0BA,OAAQC,EAAlC,EAAkCA,KAAMC,EAAxC,EAAwCA,KAASC,EAAjD,qCACT,kBAACC,EAAA,EAAD,GAAMC,IAAKH,EAAMA,KAAMA,EAAMF,OAAQA,EAAQC,KAAMA,GAAUE,QAGjE,kBAACG,EAAA,EAAD,CAAYnB,UAAWA,EAAWL,SAAUA,MAKlDF,EAAK2B,UAAY,CACf1B,KAAM2B,IAAUC,MAAM,IAAIC,WAC1B5B,SAAU0B,IAAUC,MAAM,IAAIC,YAGjB9B,QC9BA+B,UAJM,SAAAC,GAAK,OACtB,kBAAC,EAASA,K,kCCLd,IAAIC,EAAI,EAAQ,QACZC,EAAW,EAAQ,QAA+BC,QAClDC,EAAsB,EAAQ,QAC9BC,EAA0B,EAAQ,QAElCC,EAAgB,GAAGH,QAEnBI,IAAkBD,GAAiB,EAAI,CAAC,GAAGH,QAAQ,GAAI,GAAK,EAC5DK,EAAgBJ,EAAoB,WACpCK,EAAiBJ,EAAwB,UAAW,CAAEK,WAAW,EAAMC,EAAG,IAI9EV,EAAE,CAAEW,OAAQ,QAASC,OAAO,EAAMC,OAAQP,IAAkBC,IAAkBC,GAAkB,CAC9FN,QAAS,SAAiBY,GACxB,OAAOR,EAEHD,EAAcU,MAAMC,KAAMC,YAAc,EACxChB,EAASe,KAAMF,EAAeG,UAAU1C,OAAS,EAAI0C,UAAU,QAAKC","file":"component---src-templates-list-jsx-833c5bec02739d588800.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport PostsWrapper from '~/components/Common/PostsWrapper';\nimport Card from '~/components/Common/Card';\nimport Pagination from '~/components/Common/Pagination';\nimport getPosts from '~/utils/getPosts';\nimport getPage from '~/utils/getPage';\nimport { PREFIX, CONTENT_PER_PAGE } from '~/constants';\n\nconst List = ({ data, location }) => {\n  const page = getPage(location);\n  const allPosts = getPosts(data);\n  const postCount = allPosts.length;\n  const posts = allPosts.slice((page - 1) * CONTENT_PER_PAGE, page * CONTENT_PER_PAGE);\n\n  return (\n    <>\n      <PostsWrapper>\n        <Helmet>\n          <title>\n            {`${PREFIX}POSTS`}\n          </title>\n          <meta name=\"og:title\" content={`${PREFIX}POSTS`} />\n        </Helmet>\n        {posts.map(({ node: { frontmatter: { images, tags, path, ...otherProps } } }) => (\n          <Card key={path} path={path} images={images} tags={tags} {...otherProps} />\n        ))}\n      </PostsWrapper>\n      <Pagination postCount={postCount} location={location} />\n    </>\n  );\n};\n\nList.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default List;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~/components/layout';\nimport List from '~/components/List';\n\nconst ListTemplate = props => (\n    <List {...props} />\n);\n\nexport default ListTemplate;\n\nexport const pageQuery = graphql`\n  query ListQuery {\n    site {\n      siteMetadata {\n        title\n        author\n        homepage\n      }\n    }\n    posts: allMarkdownRemark (\n      filter: { frontmatter: { hide: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            type\n            title\n            images\n            heroimages {\n            childImageSharp {\n                fluid(maxWidth: 720) {\n                    ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n            }\n            publicURL\n        }\n            path\n            tags\n            date\n            summary\n          }\n        }\n      }\n    }\n  }\n`;\n","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.es/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}