{"version":3,"sources":["webpack:///./src/components/Common/PostsWrapper/index.js","webpack:///./src/utils/getPage.js","webpack:///./src/components/Common/Pagination/styled.js","webpack:///./src/components/Common/Pagination/index.jsx","webpack:///./src/components/List/index.jsx","webpack:///./src/templates/List.jsx"],"names":["PostsWrapper","styled","section","getPage","pathname","split","type","$2","$3","Number","Wrapper","nav","Pagination","postCount","location","prefix","pageCount","Math","ceil","CONTENT_PER_PAGE","pages","Array","from","cnt","i","page","hasManyPages","PAGE_PER_SCREEN","filteredPages","filter","p","abs","floor","isNearStart","includes","isNearEnd","length","to","map","key","className","propTypes","PropTypes","number","isRequired","shape","string","defaultProps","List","data","allPosts","getPosts","posts","slice","Helmet","PREFIX","name","content","node","frontmatter","images","tags","path","otherProps","Card","ListTemplate","props"],"mappings":"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","file":"component---src-templates-list-jsx-8e84c3de2461ca612b7a.js","sourcesContent":["import styled from 'styled-components';\n\nconst PostsWrapper = styled.section`\n  margin: auto;\n  padding: 120px 0 0;\n  max-width: 1176px;\n  font-size: 0;\n  @media (max-width: 414px) {\n    padding: 70px 16px 0;\n  }\n\n  &:before,\n  &:after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n\n  h1 {\n    margin: .67em 0;\n    font-size: 32px;\n  }\n\n  time {\n    margin: 1em 0;\n    font-size: 14px;\n  }\n`;\n\nexport default PostsWrapper;\n","const getPage = ({ pathname }) => {\n  const [, type, $2, $3] = pathname.split('/');\n  if (type === 'pages') {\n    return Number($2) || 1;\n  }\n\n  return Number($3) || 1;\n};\n\nexport default getPage;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.nav`\n  margin: 1em 0;\n  text-align: center;\n\n  ul {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n  }\n\n  li {\n    display: flex;\n    padding: 0 .4em;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport { FaAngleDoubleLeft, FaAngleDoubleRight, FaAngleLeft, FaAngleRight, FaEllipsisH } from 'react-icons/fa';\nimport { CONTENT_PER_PAGE, PAGE_PER_SCREEN } from '~/constants';\nimport getPage from '~/utils/getPage';\nimport { Wrapper } from './styled';\n\nconst Pagination = ({\n  postCount,\n  location,\n  prefix,\n}) => {\n  const pageCount = postCount ? Math.ceil(postCount / CONTENT_PER_PAGE) : 0;\n  const pages = Array.from(new Array(pageCount), (cnt, i) => i + 1);\n  const page = getPage(location);\n  const hasManyPages = pageCount >= PAGE_PER_SCREEN;\n  const filteredPages = hasManyPages ? pages.filter(p => (\n    Math.abs(page - p) <= Math.floor(PAGE_PER_SCREEN / 2)\n  )) : pages;\n  const isNearStart = filteredPages.includes(1);\n  const isNearEnd = filteredPages.includes(pageCount);\n\n  if (pages.length === 0) {\n    return null;\n  }\n\n  return (\n    <Wrapper>\n      <ul>\n        {hasManyPages && !isNearStart ? (\n          <>\n            <li>\n              <Link to={`${prefix}1`}>\n                <FaAngleDoubleLeft />\n              </Link>\n            </li>\n            <li>\n              <FaEllipsisH />\n            </li>\n          </>\n        ) : null}\n        {page !== 1 ? (\n          <li>\n            <Link to={`${prefix}${page - 1}`}>\n              <FaAngleLeft />\n            </Link>\n          </li>\n        ) : null}\n        {filteredPages.map((i) => {\n          if (page === i) {\n            return (\n              <li\n                key={i}\n                className={page === i ? 'active' : ''}\n              >\n                {i}\n              </li>\n            );\n          }\n\n          return (\n            <li\n              key={i}\n              className={page === i ? 'active' : ''}\n            >\n              <Link to={`${prefix}${i}`}>\n                {i}\n              </Link>\n            </li>\n          );\n        })}\n        {pageCount !== page ? (\n          <li>\n            <Link to={`${prefix}${page + 1}`}>\n              <FaAngleRight />\n            </Link>\n          </li>\n        ) : null}\n        {hasManyPages && !isNearEnd ? (\n          <>\n            <li>\n              <FaEllipsisH />\n            </li>\n            <li>\n              <Link to={`${prefix}${pageCount}`}>\n                <FaAngleDoubleRight />\n              </Link>\n            </li>\n          </>\n        ) : null}\n      </ul>\n    </Wrapper>\n  );\n};\n\nPagination.propTypes = {\n  postCount: PropTypes.number.isRequired,\n  location: PropTypes.shape({ pathname: PropTypes.string.isRequired }).isRequired,\n  prefix: PropTypes.string,\n};\n\nPagination.defaultProps = {\n  prefix: '/pages/',\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport PostsWrapper from '~/components/Common/PostsWrapper';\nimport Card from '~/components/Common/Card';\nimport Pagination from '~/components/Common/Pagination';\nimport getPosts from '~/utils/getPosts';\nimport getPage from '~/utils/getPage';\nimport { PREFIX, CONTENT_PER_PAGE } from '~/constants';\n\nconst List = ({ data, location }) => {\n  const page = getPage(location);\n  const allPosts = getPosts(data);\n  const postCount = allPosts.length;\n  const posts = allPosts.slice((page - 1) * CONTENT_PER_PAGE, page * CONTENT_PER_PAGE);\n\n  return (\n    <>\n      <PostsWrapper>\n        <Helmet>\n          <title>\n            {`${PREFIX}POSTS`}\n          </title>\n          <meta name=\"og:title\" content={`${PREFIX}POSTS`} />\n        </Helmet>\n        {posts.map(({ node: { frontmatter: { images, tags, path, ...otherProps } } }) => (\n          <Card key={path} path={path} images={images} tags={tags} {...otherProps} />\n        ))}\n      </PostsWrapper>\n      <Pagination postCount={postCount} location={location} />\n    </>\n  );\n};\n\nList.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default List;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~/components/layout';\nimport List from '~/components/List';\n\nconst ListTemplate = props => (\n    <List {...props} />\n);\n\nexport default ListTemplate;\n\nexport const pageQuery = graphql`\n  query ListQuery {\n    site {\n      siteMetadata {\n        title\n        author\n        homepage\n      }\n    }\n    posts: allMarkdownRemark (\n      filter: { frontmatter: { hide: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            type\n            title\n            images\n            heroimages {\n            childImageSharp {\n                fluid(maxWidth: 720) {\n                    ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n            }\n            publicURL\n        }\n            path\n            tags\n            date\n            summary\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}