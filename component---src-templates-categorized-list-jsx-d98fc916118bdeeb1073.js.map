{"version":3,"sources":["webpack:///./src/components/Common/PostsWrapper/index.js","webpack:///./src/utils/getPage.js","webpack:///./src/components/CategorizedList/index.jsx","webpack:///./src/templates/CategorizedList.jsx","webpack:///./src/components/Common/Pagination/styled.js","webpack:///./src/components/Common/Pagination/index.jsx"],"names":["PostsWrapper","styled","section","getPage","pathname","split","type","$2","$3","Number","CategorizedList","data","location","page","category","allPosts","getPosts","filter","c","node","frontmatter","postCount","length","posts","slice","CONTENT_PER_PAGE","Helmet","PREFIX","toUpperCase","name","content","map","heroimages","tags","path","otherProps","Card","key","Pagination","prefix","propTypes","PropTypes","shape","isRequired","CategorizedListTemplate","props","Wrapper","nav","pageCount","Math","ceil","pages","Array","from","cnt","i","hasManyPages","PAGE_PER_SCREEN","filteredPages","p","abs","floor","isNearStart","includes","isNearEnd","to","className","number","string","defaultProps"],"mappings":"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","file":"component---src-templates-categorized-list-jsx-d98fc916118bdeeb1073.js","sourcesContent":["import styled from 'styled-components';\n\nconst PostsWrapper = styled.section`\n  margin: auto;\n  padding: 120px 0 0;\n  max-width: 1176px;\n  font-size: 0;\n  @media (max-width: 414px) {\n    padding: 70px 16px 0;\n  }\n\n  &:before,\n  &:after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n\n  h1 {\n    margin: .67em 0;\n    font-size: 32px;\n  }\n\n  time {\n    margin: 1em 0;\n    font-size: 14px;\n  }\n`;\n\nexport default PostsWrapper;\n","const getPage = ({ pathname }) => {\n  const [, type, $2, $3] = pathname.split('/');\n  if (type === 'pages') {\n    return Number($2) || 1;\n  }\n\n  return Number($3) || 1;\n};\n\nexport default getPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport PostsWrapper from '~/components/Common/PostsWrapper';\nimport Card from '~/components/Common/Card';\nimport Pagination from '~/components/Common/Pagination';\nimport getPosts from '~/utils/getPosts';\nimport getPage from '~/utils/getPage';\nimport { PREFIX, CONTENT_PER_PAGE } from '~/constants';\n\nconst CategorizedList = ({ data, location }) => {\n  const page = getPage(location);\n  const [, , category] = location.pathname.split('/');\n  const allPosts = data\n    |> getPosts\n    |> (posts => posts.filter(({ node: { frontmatter: { category: c } } }) => category === c));\n  const postCount = allPosts.length;\n  const posts = allPosts.slice((page - 1) * CONTENT_PER_PAGE, page * CONTENT_PER_PAGE);\n\n  return (\n    <>\n      <PostsWrapper>\n        <Helmet>\n          <title>\n            {`${PREFIX}${category.toUpperCase()}`}\n          </title>\n          <meta name=\"og:title\" content={`${PREFIX}${category.toUpperCase()}`} />\n        </Helmet>\n        {posts.length === 0 ? (\n          <div>\n            No posts.\n          </div>\n        ) : null}\n        {posts.map(({ node: { frontmatter: { heroimages, tags, path, ...otherProps } } }) => (\n          <Card key={path} path={path} heroimages={heroimages} tags={tags} {...otherProps} />\n        ))}\n      </PostsWrapper>\n      <Pagination\n        prefix={`/categories/${category}/`}\n        postCount={postCount}\n        location={location}\n      />\n    </>\n  );\n};\n\nCategorizedList.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default CategorizedList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~/components/layout';\nimport CategorizedList from '~/components/CategorizedList';\n\nconst CategorizedListTemplate = props => (\n    <CategorizedList {...props} />\n);\n\nexport default CategorizedListTemplate;\n\nexport const pageQuery = graphql`\n  query CategorizedListQuery {\n    site {\n      siteMetadata {\n        title\n        author\n        homepage\n      }\n    }\n    posts: allMarkdownRemark (\n      filter: { frontmatter: { hide: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            type\n            title\n            category\n            images\n            heroimages {\n            childImageSharp {\n                fluid(maxWidth: 720) {\n                    ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n            }\n            publicURL\n        }\n            path\n            tags\n            date\n            summary\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.nav`\n  margin: 1em 0;\n  text-align: center;\n\n  ul {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n  }\n\n  li {\n    display: flex;\n    padding: 0 .4em;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport { FaAngleDoubleLeft, FaAngleDoubleRight, FaAngleLeft, FaAngleRight, FaEllipsisH } from 'react-icons/fa';\nimport { CONTENT_PER_PAGE, PAGE_PER_SCREEN } from '~/constants';\nimport getPage from '~/utils/getPage';\nimport { Wrapper } from './styled';\n\nconst Pagination = ({\n  postCount,\n  location,\n  prefix,\n}) => {\n  const pageCount = postCount ? Math.ceil(postCount / CONTENT_PER_PAGE) : 0;\n  const pages = Array.from(new Array(pageCount), (cnt, i) => i + 1);\n  const page = getPage(location);\n  const hasManyPages = pageCount >= PAGE_PER_SCREEN;\n  const filteredPages = hasManyPages ? pages.filter(p => (\n    Math.abs(page - p) <= Math.floor(PAGE_PER_SCREEN / 2)\n  )) : pages;\n  const isNearStart = filteredPages.includes(1);\n  const isNearEnd = filteredPages.includes(pageCount);\n\n  if (pages.length === 0) {\n    return null;\n  }\n\n  return (\n    <Wrapper>\n      <ul>\n        {hasManyPages && !isNearStart ? (\n          <>\n            <li>\n              <Link to={`${prefix}1`}>\n                <FaAngleDoubleLeft />\n              </Link>\n            </li>\n            <li>\n              <FaEllipsisH />\n            </li>\n          </>\n        ) : null}\n        {page !== 1 ? (\n          <li>\n            <Link to={`${prefix}${page - 1}`}>\n              <FaAngleLeft />\n            </Link>\n          </li>\n        ) : null}\n        {filteredPages.map((i) => {\n          if (page === i) {\n            return (\n              <li\n                key={i}\n                className={page === i ? 'active' : ''}\n              >\n                {i}\n              </li>\n            );\n          }\n\n          return (\n            <li\n              key={i}\n              className={page === i ? 'active' : ''}\n            >\n              <Link to={`${prefix}${i}`}>\n                {i}\n              </Link>\n            </li>\n          );\n        })}\n        {pageCount !== page ? (\n          <li>\n            <Link to={`${prefix}${page + 1}`}>\n              <FaAngleRight />\n            </Link>\n          </li>\n        ) : null}\n        {hasManyPages && !isNearEnd ? (\n          <>\n            <li>\n              <FaEllipsisH />\n            </li>\n            <li>\n              <Link to={`${prefix}${pageCount}`}>\n                <FaAngleDoubleRight />\n              </Link>\n            </li>\n          </>\n        ) : null}\n      </ul>\n    </Wrapper>\n  );\n};\n\nPagination.propTypes = {\n  postCount: PropTypes.number.isRequired,\n  location: PropTypes.shape({ pathname: PropTypes.string.isRequired }).isRequired,\n  prefix: PropTypes.string,\n};\n\nPagination.defaultProps = {\n  prefix: '/pages/',\n};\n\nexport default Pagination;\n"],"sourceRoot":""}