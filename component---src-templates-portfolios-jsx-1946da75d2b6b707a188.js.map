{"version":3,"sources":["webpack:///./src/components/Common/SimpleWrapper/index.js","webpack:///./src/components/Portfolios/styled.js","webpack:///./src/components/Portfolios/index.jsx","webpack:///./src/templates/Portfolios.jsx","webpack:///./src/components/imageOrient.js"],"names":["SimpleWrapper","styled","div","Wrapper","PortfolioCards","ul","PortfolioCard","li","PortImage","Portfolios","portfolios","data","edges","Helmet","PREFIX","name","content","className","map","node","frontmatter","portfoliosimages","path","title","key","to","portfoliosimage","i","aspectRatio","childImageSharp","fluid","alt","propTypes","PropTypes","shape","isRequired","PortfoliosTemplate","props","ImgWithOrient","orientation"],"mappings":"4FAAA,IAEMA,EAFN,UAEsBC,EAAOC,IAAV,oEAAGD,CAAH,8HAmBJD,O,mLCnBFG,EAAUF,YAAOD,KAAV,sEAAGC,CAAH,kWA4BPG,EAAiBH,IAAOI,GAAV,6EAAGJ,CAAH,mFAMdK,EAAgBL,IAAOM,GAAV,4EAAGN,CAAH,8IASbO,EAAYP,IAAOC,IAAV,wEAAGD,CAAH,oC,4CC7BhBQ,EAAa,SAAC,GAAD,IAEMC,EAFN,EACjBC,KACED,WAAcE,MAFC,OAKjB,kBAACT,EAAD,KACE,kBAACU,EAAA,EAAD,KACE,yCAAWC,SAAX,cACA,0BAAMC,KAAK,WAAWC,QAAO,UAAKF,SAAL,gBAG/B,yBAAKG,UAAU,oBACb,kBAACb,EAAD,CAAgBa,UAAU,mBACvBP,EAAWQ,KACV,YAIO,IAAD,IAHJC,KACEC,YAAeC,EAEb,EAFaA,iBAAkBC,EAE/B,EAF+BA,KAE/B,EAFqCC,MAGzC,OACE,kBAACjB,EAAD,CAAeW,UAAU,iBAAiBO,IAAKF,GAC7C,kBAAC,OAAD,CAAMG,GAAIH,GACa,MAApBD,GACCA,EAAiBH,KAAI,SAACQ,EAAiBC,GACrC,OACE,kBAACnB,EAAD,CAAWgB,IAAKF,GACd,kBAAC,IAAD,CACEE,IAAKF,EACLM,YACEF,EAAgBG,gBAAgBC,MAAMF,YAExCG,IAAKL,EAAgBX,KACrBe,MAAOJ,EAAgBG,gBAAgBC,qBAcnErB,EAAWuB,UAAY,CACrBrB,KAAMsB,IAAUC,MAAM,IAAIC,YAEb1B,QCxDA2B,UAJY,SAAAC,GAAK,OAC5B,kBAAC,EAAeA,K,qsBCOLC,IATO,SAAC,GAA+B,IAChDC,EADmBX,EAA4B,EAA5BA,YAAgBS,EAAY,OAMnD,OAJIT,GAAe,MAAKW,EAAc,aAClCX,GAAe,KAAKW,EAAc,YAClCX,EAAc,IAAOA,EAAc,MAAKW,EAAc,UAEnD,kBAAC,IAAD,GAAKtB,UAAS,UAAKsB,IAAmBF","file":"component---src-templates-portfolios-jsx-1946da75d2b6b707a188.js","sourcesContent":["import styled from 'styled-components';\n\nconst SimpleWrapper = styled.div`\n  position: relative;\n  margin: 0 auto;\n  max-width: 1920px;\n\n  //dark mode\n\nmin-height: 100vh;\n\n  //dark mode\n\n  &:before,\n  &:after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n`;\n\nexport default SimpleWrapper;\n","import styled from 'styled-components';\nimport SimpleWrapper from '~/components/Common/SimpleWrapper';\nexport const Wrapper = styled(SimpleWrapper)`\n.portfolio_cards{\n  display: flex;\n  flex-wrap: wrap;\n  padding-top: 80px;\n  justify-content: space-between;\n}\nul li{\n  list-style: none;\n}\n.portfolio_cards li{\n  width: 100%;\n  @media (min-width: 414px) {\n    width: 100%;\n  }\n  @media (min-width: 768px) {\n    width: calc(1/2*100% - (1 - 1/2)*20px);\n  }\n  @media (min-width: 1200px) {\n    width: calc(1/3*100% - (1 - 1/3)*30px);\n  }\n  img{\n    display: block;\n    max-width: 100%;\n  }\n}\n`;\n\nexport const PortfolioCards = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: space-between;\n`;\nexport const PortfolioCard = styled.li`\n@media (min-width: 414px) {\n  width: calc(1/3*100% - (1 - 1/3)*60px);\n  margin: 100px 0px;\n}\nwidth: calc(1/2*100% - (1 - 1/2)*60px);\nmargin: 100px 0px;\n`;\n\nexport const PortImage = styled.div`\nmax-width: 200px;\nmargin: 0 auto;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link } from 'gatsby';\nimport { PREFIX } from '~/constants';\nimport { Wrapper } from './styled';\nimport Img from 'gatsby-image'\nimport posed from 'react-pose';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nimport { PortImage, PortfolioCards, PortfolioCard } from './styled';\n\nimport ImgWithOrient from '~/components/imageOrient';\n\n\nconst Portfolios = ({\n  data: {\n    portfolios: { edges: portfolios },\n  },\n}) => (\n  <Wrapper>\n    <Helmet>\n      <title>{`${PREFIX}Portfolio`}</title>\n      <meta name=\"og:title\" content={`${PREFIX}Portfolio`} />\n    </Helmet>\n\n    <div className=\"projects-wrapper\">\n      <PortfolioCards className=\"portfolio_cards\">\n        {portfolios.map(\n          ({\n            node: {\n              frontmatter: { portfoliosimages, path, title = [] },\n            },\n          }) => {\n            return (\n              <PortfolioCard className=\"portfolio_card\" key={path}>\n                <Link to={path}>\n                  {portfoliosimages != null &&\n                    portfoliosimages.map((portfoliosimage, i) => {\n                      return (\n                        <PortImage key={path}>\n                          <ImgWithOrient\n                            key={path}\n                            aspectRatio={\n                              portfoliosimage.childImageSharp.fluid.aspectRatio\n                            }\n                            alt={portfoliosimage.name}\n                            fluid={portfoliosimage.childImageSharp.fluid}\n                          />\n                        </PortImage>\n                      );\n                    })}\n                </Link>\n              </PortfolioCard>\n            );\n          }\n        )}\n      </PortfolioCards>\n    </div>\n  </Wrapper>\n);\nPortfolios.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n};\nexport default Portfolios;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~/components/layout';\nimport Portfolios from '~/components/Portfolios';\n\nconst PortfoliosTemplate = props => (\n    <Portfolios {...props} />\n);\n\nexport default PortfoliosTemplate;\n\nexport const pageQuery = graphql`\n  query PortfoliosQuery {\n    site {\n      siteMetadata {\n        title\n        author\n        homepage\n      }\n    }\n    portfolios: allMarkdownRemark (\n      filter: {\n        frontmatter: {\n          type: { eq: \"portfolio\" }\n          hide: { ne: true }\n        }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            type\n            title\n            path\n            images\n            portfoliosimages {\n            childImageSharp {\n                fluid(maxWidth: 540, quality: 72) {\n                    ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n            }\n            publicURL\n        }\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Img from \"gatsby-image\";\n\n// we only care about `aspectRatio`, the rest will be passed directly to `Img`\nconst ImgWithOrient = ({ aspectRatio, ...props }) => {\n  let orientation;\n  if (aspectRatio >= 1.2) orientation = \"landscape\";\n  if (aspectRatio <= 0.8) orientation = \"portrait\";\n  if (aspectRatio > 0.8 && aspectRatio < 1.2) orientation = \"square\";\n\n  return <Img className={`${orientation}`} {...props} />;\n};\n\nexport default ImgWithOrient;"],"sourceRoot":""}