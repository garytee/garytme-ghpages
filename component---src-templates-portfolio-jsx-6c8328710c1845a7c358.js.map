{"version":3,"sources":["webpack:///./src/components/Portfolio/styled.js","webpack:///./src/components/Portfolio/index.jsx","webpack:///./src/templates/Portfolio.jsx","webpack:///./src/components/Common/SimpleWrapper/index.js"],"names":["Wrapper","styled","SimpleWrapper","withConfig","displayName","componentId","PortfolioDescription","section","PortfolioImages","PRIMARY_COLOR","Portfolio","_ref","_ref$data$portfolio","data","portfolio","_ref$data$portfolio$f","frontmatter","title","attachments","images","html","react_default","a","createElement","Helmet_default","concat","PREFIX","toUpperCase","name","content","dangerouslySetInnerHTML","__html","map","attachment","i","className","gatsby_image_default","key","fluid","childImageSharp","alt","propTypes","PropTypes","shape","date","object","isRequired","__webpack_require__","d","__webpack_exports__","pageQuery","PortfolioTemplate","props","layout","components_Portfolio","div"],"mappings":"qMAIaA,EAAUC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,WAAGJ,CAAH,yJAkBPK,EAAuBL,IAAOM,QAAVJ,WAAA,CAAAC,YAAA,+BAAAC,YAAA,WAAGJ,CAAH,6MAkDpBO,EAAkBP,IAAOM,QAAVJ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,WAAGJ,CAAH,4SAkDJQ,uBCnHlBC,EAAY,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,KAAQC,UAAXC,EAAAH,EAAwBI,YAAeC,EAAvCF,EAAuCE,MAAeC,GAAtDH,EAA8CI,OAA9CJ,EAAsDG,aAAeE,EAArER,EAAqEQ,KAArE,OAChBC,EAAAC,EAAAC,cAACvB,EAAD,KACEqB,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAAA,gBAAAE,OACMC,UADND,OACeR,EAAMU,gBAErBN,EAAAC,EAAAC,cAAA,QAAMK,KAAK,WAAWC,QAAO,GAAAJ,OAAKC,UAALD,OAAcR,EAAMU,kBAEnDN,EAAAC,EAAAC,cAACjB,EAAD,KACEe,EAAAC,EAAAC,cAAA,WAASO,wBAAyB,CAAEC,OAAQX,MAE9CC,EAAAC,EAAAC,cAACf,EAAD,KAqEkB,MAAfU,GAAuBA,EAAYc,IAAI,SAACC,EAAYC,GAanD,OACEb,EAAAC,EAAAC,cAAA,QAAMY,UAAU,WAChBd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CACEe,IAAKH,EACLI,MAAOL,EAAWM,gBAAgBD,MAClCE,IAAKvB,UA2BjBP,EAAU+B,UAAY,CACpB5B,KAAM6B,IAAUC,MAAM,CAAEC,KAAMF,IAAUG,SAAUC,YAGrCpC,QCxIfqC,EAAAC,EAAAC,EAAA,8BAAAC,IAWeC,UANW,SAAAC,GAAK,OAC7B/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAWD,EACV/B,EAAAC,EAAAC,cAAC+B,EAAcF,KAFnB,IAQaF,EAAS,+CCbtB,IAEMhD,EAFN6C,EAAA,KAEsB9C,EAAOsD,IAAVpD,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGJ,CAAH,6GAaJC","file":"component---src-templates-portfolio-jsx-6c8328710c1845a7c358.js","sourcesContent":["import styled from 'styled-components';\nimport SimpleWrapper from '~/components/Common/SimpleWrapper';\nimport { PRIMARY_COLOR } from '~/components/Common/constants';\n\nexport const Wrapper = styled(SimpleWrapper)`\n  padding: 100px 20px;\n\n  @media (max-width: 414px) {\n    padding: 70px 16px 0;\n  }\n\n  &:before,\n  &:after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const PortfolioDescription = styled.section`\n//   float: left;\n//   padding: 0 0 0 36px;\n//   width: 50%;\n\n//   @media (max-width: 414px) {\n//     float: none;\n//     margin: 0 0 16px;\n//     padding: 0 0 16px;\n//     width: 100%;\n//   }\n\n// //   h1:after, h2:after {\n// //     content: \"\";\n// //     display: block;\n// //     position: relative;\n// //     top: .33em;\n// //     border-bottom: 1px solid hsla(0,0%,50%,.33);\n// //     margin: 20px;\n// // }\n\n  h1 {\n    margin: 0.67em 0;\n    font-size: 40px;\n  }\n\n  h2 {\n    margin: 0.67em 0;\n    font-size: 20px;\n  }\n\n  ul {\n    margin: 10px 0;\n    padding: 0 0 0 40px;\n    list-style: disc;\n  }\n\n  a {\n    text-decoration: underline;\n  }\n\n\nwidth: 100%;\n\n  @media (min-width: 414px) {\n    width: 50%;\n  }\n\n`;\n\nexport const PortfolioImages = styled.section`\n  // float: left;\n  // padding: 0 36px 0 0;\n  width: 50%;\n  // max-height: calc(100vh - 100px);\n  // overflow-y: scroll;\n  // text-align: center;\n\n\n  @media (max-width: 414px) {\n    float: none;\n    padding: 0;\n    width: 100%;\n    height: auto;\n    overflow-y: visible;\n  }\n\n  .imgwrap{\n    display: block;\n    text-align: center;\n    margin: 0 auto;\n    max-width: 540px;\n        margin-top: 20px;\n  }\n\n  // img {\n  //  // padding: 16px;\n  //  //  width: 100%;\n  //  //  height: auto; \n  //   padding: 16px;\n  //   max-width: 100%;\n  //   display: block;\n  //   margin: 0 auto;\n\n  //   @media (max-width: 414px) {\n  //     float: left;\n  //     margin: 0 0 8px;\n  //     padding: 0;\n  //     &:last-child {\n  //       margin: 0 0 16px;\n  //     }\n  //   }\n  // }\n\n  ::-webkit-scrollbar {\n    width: 4px;\n    height: 6px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: ${PRIMARY_COLOR};\n    border-radius: 6px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { PREFIX } from '~/constants';\nimport { Wrapper, PortfolioDescription, PortfolioImages } from './styled';\nimport Img from 'gatsby-image'\n\nconst Portfolio = ({ data: { portfolio: { frontmatter: { title, images, attachments }, html } } }) => (\n  <Wrapper>\n    <Helmet>\n      <title>\n        {`${PREFIX}${title.toUpperCase()}`}\n      </title>\n      <meta name=\"og:title\" content={`${PREFIX}${title.toUpperCase()}`} />\n    </Helmet>\n    <PortfolioDescription>\n      <section dangerouslySetInnerHTML={{ __html: html }} />\n    </PortfolioDescription>\n    <PortfolioImages>\n{/*       {portimages.map((portimage) => { */}\n{/*         if (portimage.includes('//')) { */}\n{/*           return ( */}\n{/*             <img */}\n{/*               key={portimage} */}\n{/*               src={portimage} */}\n{/*               alt={title} */}\n{/*             /> */}\n{/*           ); */}\n{/*         } */}\n{/*  */}\n{/*         const url = require(`~/resources/${portimage}`); */}\n{/*  */}\n{/*         return ( */}\n{/*           <img */}\n{/*             key={portimage} */}\n{/*             src={url} */}\n{/*             alt={title} */}\n{/*           /> */}\n{/*         ); */}\n{/*       })} */}\n\n\n{/*             {node.frontmatter.image != null && */}\n{/*             <Img sizes={node.frontmatter.image.childImageSharp.sizes} /> */}\n{/*             } */}\n\n\n{/* {!!test && !!test.childImageSharp */}\n{/*           ? <Img fluid={test.childImageSharp.fluid} */}\n{/*                  alt={title} */}\n{/*             /> */}\n{/*           : <img src={test.publicURL} */}\n{/*                  alt={title}  */}\n{/*            /> */}\n{/*         } */}\n\n\n{/*                   {test != null && */}\n{/*  */}\n{/*  <Img fixed={test.childImageSharp.fixed} alt={title} /> */}\n{/* } */}\n\n\n\n{/*       {portimages.map((portimage) => { */}\n{/*         if (portimage.includes('//')) { */}\n{/*           return ( */}\n{/*             <img */}\n{/*               key={portimage} */}\n{/*               src={portimage} */}\n{/*               alt={title} */}\n{/*             /> */}\n{/*           ); */}\n{/*         } */}\n{/*  */}\n{/*         const url = require(`~/resources/${portimage}`); */}\n{/*  */}\n{/*         return ( */}\n{/*           <img */}\n{/*             key={portimage} */}\n{/*             src={url} */}\n{/*             alt={title} */}\n{/*           /> */}\n{/*         ); */}\n{/*       })} */}\n\n\n      {attachments != null && attachments.map((attachment, i) => {\n{/*         if (attachment.includes('//')) { */}\n{/*           return ( */}\n{/*             <img */}\n{/*               key={attachment} */}\n{/*               src={attachment} */}\n{/*               alt={title} */}\n{/*             /> */}\n{/*           ); */}\n{/*         } */}\n{/*  */}\n{/*         const url = require(`~/resources/${attachment}`); */}\n\n        return (\n          <span className=\"imgwrap\">\n          <Img\n            key={i}\n            fluid={attachment.childImageSharp.fluid}\n            alt={title}\n          />\n          </span>\n        );\n      })}\n\n\n\n\n\n\n{/*                   {phoneimg != null && */}\n{/*  */}\n{/*  <Img fixed={phoneimg.childImageSharp.fixed} alt={title} /> */}\n{/* } */}\n\n{/*                   {test != null && */}\n{/*  */}\n{/*  <Img fixed={test.childImageSharp.fixed} alt={title} /> */}\n{/* } */}\n\n\n\n    </PortfolioImages>\n  </Wrapper>\n);\n\nPortfolio.propTypes = {\n  data: PropTypes.shape({ date: PropTypes.object }).isRequired,\n};\n\nexport default Portfolio;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~/components/layout';\nimport Portfolio from '~/components/Portfolio';\n\nconst PortfolioTemplate = props => (\n  <Layout {...props}>\n    <Portfolio {...props} />\n  </Layout>\n);\n\nexport default PortfolioTemplate;\n\nexport const pageQuery = graphql`\n  query PortfolioQuery ($path: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        homepage\n      }\n    }\n    portfolio: markdownRemark (frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        title\n        images\n        attachments {\n            childImageSharp {\n                fluid(maxWidth: 540) {\n                    ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n            }\n            publicURL\n        }\n        date\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nconst SimpleWrapper = styled.div`\n  position: relative;\n  margin: 0 auto;\n  max-width: 1920px;\n\n  &:before,\n  &:after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n`;\n\nexport default SimpleWrapper;\n"],"sourceRoot":""}